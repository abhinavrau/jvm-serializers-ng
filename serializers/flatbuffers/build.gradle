group 'com.github.jvm-serializers-ng'
version '1.0-SNAPSHOT'

apply plugin: "java"
apply plugin: "idea"
apply plugin: "io.netifi.flatbuffers"
apply plugin: "com.github.dkorotych.gradle-maven-exec"


// Earlier versions of Gradle
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath "gradle.plugin.io.netifi:gradle-flatbuffers-plugin:1.0.4"
        classpath "gradle.plugin.com.github.dkorotych.gradle.maven.exec:gradle-maven-exec-plugin:1.2.2.1"

    }
}
import io.netifi.flatbuffers.plugin.tasks.FlatBuffers

repositories {
    mavenCentral()
}

dependencies {
    compile project(':core')
    compile 'com.github.davidmoten:flatbuffers-java:1.8.0.1'
    testCompile project (path: ':core', configuration: 'testArchives')
}

sourceSets {
    main
            {
                java {
                    srcDirs = ['src/main/java','src/main/generated-sources']
                }

            }
}

flatbuffers {
    flatcPath = 'target/bin/flatc'
    language = 'java'
}

task createFlatBuffers(type: FlatBuffers) {
    outputDir = file("src/main/generated-sources")
}

idea {
    module {
        // Marks the already(!) added srcDir as "generated"
        generatedSourceDirs += file('src/main/generated-sources')
    }
}


task generateFlatBuffers(type: MavenExec) {
    goals 'generate-sources'
}

task cleanFlatBuffers(type: MavenExec) {
    goals 'clean'
}


compileJava{
    dependsOn generateFlatBuffers
}

clean{
    dependsOn cleanFlatBuffers
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}

